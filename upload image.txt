use Illuminate\Support\Facades\Storage;

public function storeProduct(StoreProductRequest $request)
{
    // Validate the request data
    $validatedData = $request->validate([
        'name' => 'required|string|max:255',
        'description' => 'nullable|string',
        'price' => 'required|numeric',
        'quantity' => 'required|integer',
        'images' => 'required|image|max:2048', // Assuming images are uploaded as files and have a max size of 2MB
        'category_id' => 'required',
    ]);

    // Handle image upload
    if ($request->hasFile('images')) {
        // Get the uploaded file
        $uploadedImage = $request->file('images');

        // Generate a unique name for the image
        $imageName = uniqid('product_') . '.' . $uploadedImage->getClientOriginalExtension();

        // Store the image in the storage disk (you can configure the disk in config/filesystems.php)
        $imagePath = $uploadedImage->storeAs('product_images', $imageName);

        // Update the 'images' field in the validated data with the image path
        $validatedData['images'] = $imagePath;
    }

    // Create the product record in the database
    $product = Product::create($validatedData);

    if ($product) {
        return response()->json([
            'status' => 'success',
            'data' => $product,
            'message' => 'Product created successfully'
        ], 201);
    } else {
        // Delete the uploaded image if product creation fails
        if (isset($imagePath)) {
            Storage::delete($imagePath);
        }
        
        return response()->json([
            'status' => 'error',
            'message' => 'Error Product not created'
        ], 500);
    }
}
